"""Add User, CarbonFootprint, and Vehicle models

Revision ID: 0a06f4727f1f
Revises: e6aec94cfb48
Create Date: 2025-05-01 22:17:18.509215

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0a06f4727f1f'
down_revision = 'e6aec94cfb48'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meat_fish_eggs', sa.Float(), nullable=True),
    sa.Column('grains_baked_goods', sa.Float(), nullable=True),
    sa.Column('dairy', sa.Float(), nullable=True),
    sa.Column('fruits_vegetables', sa.Float(), nullable=True),
    sa.Column('snacks_drinks', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('home',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('electricity', sa.Float(), nullable=True),
    sa.Column('electricity_unit', sa.String(length=10), nullable=True),
    sa.Column('electricity_frequency', sa.String(length=10), nullable=True),
    sa.Column('clean_energy_percentage', sa.Float(), nullable=True),
    sa.Column('natural_gas', sa.Float(), nullable=True),
    sa.Column('natural_gas_unit', sa.String(length=10), nullable=True),
    sa.Column('natural_gas_frequency', sa.String(length=10), nullable=True),
    sa.Column('heating_oil', sa.Float(), nullable=True),
    sa.Column('heating_oil_unit', sa.String(length=10), nullable=True),
    sa.Column('heating_oil_frequency', sa.String(length=10), nullable=True),
    sa.Column('living_space', sa.Float(), nullable=True),
    sa.Column('water_usage', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shopping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goods_multiplier', sa.Float(), nullable=True),
    sa.Column('services_multiplier', sa.Float(), nullable=True),
    sa.Column('furniture_appliances', sa.Float(), nullable=True),
    sa.Column('clothing', sa.Float(), nullable=True),
    sa.Column('entertainment', sa.Float(), nullable=True),
    sa.Column('office_supplies', sa.Float(), nullable=True),
    sa.Column('personal_care', sa.Float(), nullable=True),
    sa.Column('services_food', sa.Float(), nullable=True),
    sa.Column('education', sa.Float(), nullable=True),
    sa.Column('communication', sa.Float(), nullable=True),
    sa.Column('loan', sa.Float(), nullable=True),
    sa.Column('transport', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('travel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_transit_distance', sa.Float(), nullable=True),
    sa.Column('air_travel_distance', sa.Float(), nullable=True),
    sa.Column('bus_kms', sa.Float(), nullable=True),
    sa.Column('transit_rail_kms', sa.Float(), nullable=True),
    sa.Column('commuter_rail_kms', sa.Float(), nullable=True),
    sa.Column('intercity_rail_kms', sa.Float(), nullable=True),
    sa.Column('short_flights', sa.Integer(), nullable=True),
    sa.Column('medium_flights', sa.Integer(), nullable=True),
    sa.Column('long_flights', sa.Integer(), nullable=True),
    sa.Column('extended_flights', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('carbon_footprint',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('travel_id', sa.Integer(), nullable=True),
    sa.Column('shopping_id', sa.Integer(), nullable=True),
    sa.Column('food_id', sa.Integer(), nullable=True),
    sa.Column('home_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food.id'], ),
    sa.ForeignKeyConstraint(['home_id'], ['home.id'], ),
    sa.ForeignKeyConstraint(['shopping_id'], ['shopping.id'], ),
    sa.ForeignKeyConstraint(['travel_id'], ['travel.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('travel_id', sa.Integer(), nullable=False),
    sa.Column('fuel_type', sa.String(length=20), nullable=False),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('fuel_efficiency', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['travel_id'], ['travel.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('carbon_footprint_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.Column('total_emissions', sa.Float(), nullable=True),
    sa.Column('travel_emissions', sa.Float(), nullable=True),
    sa.Column('home_emissions', sa.Float(), nullable=True),
    sa.Column('food_emissions', sa.Float(), nullable=True),
    sa.Column('shopping_emissions', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['carbon_footprint_id'], ['carbon_footprint.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('emissions')
    op.drop_table('vehicle')
    op.drop_table('carbon_footprint')
    op.drop_table('travel')
    op.drop_table('shopping')
    op.drop_table('home')
    op.drop_table('food')
    # ### end Alembic commands ###
