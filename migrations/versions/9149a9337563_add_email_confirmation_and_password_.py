"""add_email_confirmation_and_password_reset

Revision ID: 9149a9337563
Revises: e6aec94cfb48
Create Date: 2025-05-01 13:30:27.747027

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '9149a9337563'
down_revision = 'e6aec94cfb48'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_carbon_data')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('confirmed', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('confirmed')

    op.create_table('user_carbon_data',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('has_vehicle', sa.BOOLEAN(), nullable=True),
    sa.Column('vehicle_data', sqlite.JSON(), nullable=True),
    sa.Column('transit_mode', sa.VARCHAR(length=10), nullable=True),
    sa.Column('transit_distance', sa.FLOAT(), nullable=True),
    sa.Column('bus_miles', sa.FLOAT(), nullable=True),
    sa.Column('transit_rail_miles', sa.FLOAT(), nullable=True),
    sa.Column('commuter_rail_miles', sa.FLOAT(), nullable=True),
    sa.Column('intercity_rail_miles', sa.FLOAT(), nullable=True),
    sa.Column('air_travel_mode', sa.VARCHAR(length=10), nullable=True),
    sa.Column('air_travel_distance', sa.FLOAT(), nullable=True),
    sa.Column('short_flights', sa.INTEGER(), nullable=True),
    sa.Column('medium_flights', sa.INTEGER(), nullable=True),
    sa.Column('long_flights', sa.INTEGER(), nullable=True),
    sa.Column('extended_flights', sa.INTEGER(), nullable=True),
    sa.Column('electricity', sa.FLOAT(), nullable=True),
    sa.Column('electricity_unit', sa.VARCHAR(length=5), nullable=True),
    sa.Column('electricity_frequency', sa.VARCHAR(length=5), nullable=True),
    sa.Column('clean_energy_percentage', sa.FLOAT(), nullable=True),
    sa.Column('natural_gas', sa.FLOAT(), nullable=True),
    sa.Column('natural_gas_unit', sa.VARCHAR(length=5), nullable=True),
    sa.Column('natural_gas_frequency', sa.VARCHAR(length=5), nullable=True),
    sa.Column('heating_oil', sa.FLOAT(), nullable=True),
    sa.Column('heating_oil_unit', sa.VARCHAR(length=5), nullable=True),
    sa.Column('heating_oil_frequency', sa.VARCHAR(length=5), nullable=True),
    sa.Column('living_space', sa.FLOAT(), nullable=True),
    sa.Column('water_usage', sa.FLOAT(), nullable=True),
    sa.Column('meat_fish_eggs', sa.FLOAT(), nullable=True),
    sa.Column('grains_baked_goods', sa.FLOAT(), nullable=True),
    sa.Column('dairy', sa.FLOAT(), nullable=True),
    sa.Column('fruits_vegetables', sa.FLOAT(), nullable=True),
    sa.Column('snacks_drinks', sa.FLOAT(), nullable=True),
    sa.Column('shopping_mode', sa.VARCHAR(length=10), nullable=True),
    sa.Column('goods_multiplier', sa.FLOAT(), nullable=True),
    sa.Column('services_multiplier', sa.FLOAT(), nullable=True),
    sa.Column('furniture_appliances', sa.FLOAT(), nullable=True),
    sa.Column('clothing', sa.FLOAT(), nullable=True),
    sa.Column('entertainment', sa.FLOAT(), nullable=True),
    sa.Column('office_supplies', sa.FLOAT(), nullable=True),
    sa.Column('personal_care', sa.FLOAT(), nullable=True),
    sa.Column('services_food', sa.FLOAT(), nullable=True),
    sa.Column('education', sa.FLOAT(), nullable=True),
    sa.Column('communication', sa.FLOAT(), nullable=True),
    sa.Column('loan', sa.FLOAT(), nullable=True),
    sa.Column('transport', sa.FLOAT(), nullable=True),
    sa.Column('carbon_footprint_total', sa.FLOAT(), nullable=True),
    sa.Column('calculated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###
